name: Backend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: whos-my-good-boy:test
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: whos-my-good-boy:test
          load: true
          cache-from: type=gha
      - name: Run unit tests in container
        run: |
          docker run whos-my-good-boy:test pytest -k "not integration" -v

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    # This ensures integration tests only run if unit tests pass
    needs: unit-tests
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: whos-my-good-boy:test
          load: true
          cache-from: type=gha
      - name: Run integration tests in container
        run: |
          docker run \
            -e MODELS_DIR="/app/models/" \
            -e MODEL_SOURCE="s3" \
            -e CAT_DOG_OTHER_CLASSIFIER="cat-dog-other-classifier" \
            -e API_VERSION="v1" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            -e S3_MODELS_BUCKET="${{ secrets.S3_MODELS_BUCKET }}" \
            -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            whos-my-good-boy:test pytest -m "integration" -v

  # If all tests pass, we could add a deploy step here
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [unit-tests, integration-tests]
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     # Deployment steps would go here
